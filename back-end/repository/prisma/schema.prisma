generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Customer {
    id        Int      @id @default(autoincrement())
    firstName String
    lastName  String
    email     String   @unique
    role      String   @default("customer")
    birthday  DateTime
    password  String
    createdAt DateTime @default(now())
    Order     Order[]
}

model Employee {
    id           Int      @id @default(autoincrement())
    firstName    String
    lastName     String
    email        String   @unique
    birthday     DateTime
    password     String
    role         String   @default("worker")
    experience   Int
    domain       String
    licenseType  String
    workPosition String   @default("worker")
    createdOn    DateTime @default(now())
    Order        Order[]
}

model House {
    id          Int      @id @default(autoincrement()) // Primary key for the House
    houseNumber String // House number, e.g., "123"
    street      String // Street name, e.g., "Main St"
    city        String // City name, e.g., "Springfield"
    zip         String // ZIP code, e.g., "62701"
    country     String   @default("Belgium") // Country name with a default value
    createdAt   DateTime @default(now()) // Timestamp for creation
    type        String // Type of house (e.g., "detached", "apartment")
    order       Order[]
    rooms       Room[]
}

model Order {
    id         Int      @id @default(autoincrement())
    houseId    Int
    house      House    @relation(fields: [houseId], references: [id])
    orderDate  DateTime @default(now())
    startDate  DateTime
    status     String
    price      Float
    customer   Customer @relation(fields: [customerId], references: [id])
    customerId Int
    employee   Employee @relation(fields: [employeeId], references: [id])
    employeeId Int
    // rooms      Room[]
}

model Room {
    id              Int      @id @default(autoincrement())
    name            String
    workDescription String
    house           House    @relation(fields: [houseId], references: [id])
    houseId         Int
    createdAt       DateTime @default(now())
    // order           Order    @relation(fields: [orderId], references: [id])
    // orderId         Int
}
